{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 2018,
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint",
      "react-hooks",
      "react",
      "import",
      "filenames",
      "unicorn",
      "only-warn"
    ],
    "extends": [
      "plugin:react/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:sonarjs/recommended",
      "plugin:unicorn/recommended"
      // "xo",
      // "xo-react"
    ],
    "rules": {
      "no-warning-comments": [
        "warn",
        {
          "terms": ["todo", "fixme", "TODO", "FIXME"],
          "location": "anywhere"
        }
      ],
      "no-console": ["warn"],
      "unicorn/filename-case": "off",
      "unicorn/prefer-module": "off",
      "unicorn/prevent-abbreviations": "off",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
      "react/prop-types": "off",
      "@typescript-eslint/naming-convention": [
        "warn",
        {
          "selector": "default",
          "format": ["camelCase"],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        },
  
        {
          "selector": "variable",
          "format": ["camelCase", "UPPER_CASE", "PascalCase"],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        },
  
        {
          "selector": "typeLike",
          "format": ["PascalCase"]
        },
        {
          "selector": "enumMember",
          "format": ["UPPER_CASE"]
        }
      ],
      "@typescript-eslint/no-non-null-assertion": "error",
      "@typescript-eslint/explicit-function-return-type": [
        "warn",
        {
          "allowExpressions": true
        }
      ],
      "react/prop-types": "off",
      "react/boolean-prop-naming": [
        "warn",
        { "rule": "^is[A-Z]([A-Za-z0-9]?)+" }
      ],
      "react/destructuring-assignment": ["warn"],
      "react/function-component-definition": [
        "error",
        {
          "namedComponents": "arrow-function"
        }
      ],
      "react/no-children-prop": ["error"],
      "react/no-typos": ["error"],
      "filenames/match-exported": ["error"],
      // "import/no-unresolved": ["error"],
      "import/named": ["error"],
      "import/default": ["error"],
      "import/first": ["error"],
      "import/no-duplicates": ["warn"]
    },
    "settings": {
      "react": {
        "pragma": "React",
        "version": "detect"
      }
    }
  }
  